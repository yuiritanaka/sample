0410課題の所感

#マニュアルを読んで理解したこと

##Gitについて
・Gitとは、プログラムのソースコードなどの変更履歴を記録・追跡するための分散型バージョン管理システムのこと  
・バージョン管理システムは、集中型・分散型の2種類に分類できる。  
・また、集中型はCSVやSuversion、分散型はGitやMercurialが該当する。  
・分散型と呼ばれる理由は、オフラインでもプログラムの編集ができ、その変更履歴等も管理できるため。  
・ファイルを編集前に戻すときや、チームで誰がどのようにファイルを変更したかをわかるようにしたい際に便利。  
・Gitはシステム、GithubはGitを用いたサービス（Gitのプロジェクトをホスティングしてくれるサービス）であり、イコールではない。  

###用語
・リポジトリ…記録領域  
・コミット,リビジョン…状態の記録  
・ワークツリー…記録の展開場所  
・ブランチ…記録を指すポインタ    
・push…アップロード  
・fetch…ダウンロード(リモートからの更新情報の取得)     
・marge…リモートローカルのブランチを合流(リモートの更新情報をローカルに反映)  
・rebase…同上    



###更新の流れ
・init…リポジトリ作成  
・diff…前コミットからの差分表示  
・add…ステージに上げる  
・status…コミット内容の確認  
・log…コミット履歴を確認  

________________________________________________

##コミットについて
####・コミットに入っている情報  
　　・リビジョン  
　　・Author  
　　・Committer    
　　・ファイルのスナップショット  
　　・１つ前のコミットのリビジョン←重要
  
 

##ブランチについて
・ブランチは最終コミットの別名  
・ブランチ名の代わりにリビジョンを指定したり、その逆も可能  
・ブランチを作る＝コミットのさらなる別名を作る  
・枝分かれは、それぞれのブランチでコミットされて初めて発生する  


_________________________________________________

##マージについて

・マージには２種類がある（「Fast-Foward」「Non Fast-Foward」）  


  



##リベースについて
**良い点**  
・コミットグラフがきれいになる  

**悪い点**  
・Pushされているブランチをrebaseするとpushできなくなる→共有のブランチでpushしてはならない  
・「マージした」という事実は失われる  
・マージに比べると、コンフリクト解消が面倒  

_______________________________________________

#わからなかった点

・用語や概念的なものは把握したつもりだが、実際の画面が英語のみの表記であったことと、望んでいる説明がネット検索で出てこなかったためかなり苦戦した。  
（課題の３の作業は中島さんに操作方法を教えていただきました…）

・「コミットグラフ…コミットAがあればBをたどれるという概念」という解説  
履歴ということ？  

・「マージコミット…マージの結果作られたコミットのこと」という解説  
コミット＝変更を記録するための操作とすると、成果物を対象にしている？

・「Fast-Foward…マージの代わりに早送りする、ブランチをマージしたという事実が歴史（コミットグラフ）に残らない」という解説  
早送りの解釈がぴんと来ない、ただ移動しただけということ？  
  
・「Non Fast-Foward…マージ後のMaster≠Topicではない→全部混ぜる」という解説  
混ぜるという表現にもやもやする、差分を考慮しないということ？    

・何がわかっていないのかも認識できていない状況なので、次回までに何かしら勉強してこようと思います。  


#本日の参考文献  
[【5分で脱初心者】Git初心者がまず目を通すべきおすすめスライド7選](https://www.sejuku.net/blog/5915)